{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduar\\\\Documents\\\\login2\\\\login-\\\\client\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [mensagem, setMensagem] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const resposta = await fetch('http://localhost:5000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        senha\n      })\n    });\n    const dados = await resposta.json();\n    if (resposta.ok) {\n      setMensagem('Login realizado com sucesso!');\n    } else {\n      setMensagem(dados.erro || 'Erro ao fazer login.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Senha\",\n      value: senha,\n      onChange: e => setSenha(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Entrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"amUzm2xPDI4H9cRqkKTvt5BoaKQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","email","setEmail","senha","setSenha","mensagem","setMensagem","handleSubmit","e","preventDefault","resposta","fetch","method","headers","body","JSON","stringify","dados","json","ok","erro","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Eduar/Documents/login2/login-/client/src/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const [mensagem, setMensagem] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const resposta = await fetch('http://localhost:5000/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, senha })\r\n    });\r\n    const dados = await resposta.json();\r\n    if (resposta.ok) {\r\n      setMensagem('Login realizado com sucesso!');\r\n    } else {\r\n      setMensagem(dados.erro || 'Erro ao fazer login.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Senha\" value={senha} onChange={e => setSenha(e.target.value)} />\r\n      <button type=\"submit\">Entrar</button>\r\n      <p>{mensagem}</p>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEf,KAAK;QAAEE;MAAM,CAAC;IACvC,CAAC,CAAC;IACF,MAAMc,KAAK,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACnC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACfb,WAAW,CAAC,8BAA8B,CAAC;IAC7C,CAAC,MAAM;MACLA,WAAW,CAACW,KAAK,CAACG,IAAI,IAAI,sBAAsB,CAAC;IACnD;EACF,CAAC;EAED,oBACEtB,OAAA;IAAMuB,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBAC3BxB,OAAA;MAAOyB,IAAI,EAAC,OAAO;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAExB,KAAM;MAACyB,QAAQ,EAAElB,CAAC,IAAIN,QAAQ,CAACM,CAAC,CAACmB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjGjC,OAAA;MAAOyB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAEtB,KAAM;MAACuB,QAAQ,EAAElB,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpGjC,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrCjC,OAAA;MAAAwB,QAAA,EAAIjB;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEX;AAAC/B,EAAA,CA5BQD,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AA8Bd,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}